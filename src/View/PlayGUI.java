/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.ImageIcon;

import Controller.RoomClient;
import Controller.SoundController;

/**
 *
 * @author K
 */
public class PlayGUI extends javax.swing.JFrame {
	
	private RoomClient room;
	private static String file;	
	private int select;
	private int octave;

    /**
     * Creates new form PlayGUI
     */
    public PlayGUI() {
        initComponents();
    }
    
    public PlayGUI(RoomClient room, int select) {
    	this.room = room;
    	this.select = select;
    	octave = 0;
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonInfo = new javax.swing.JLabel();
        
        setLocation(new java.awt.Point(400, 300));
        
        Image i = Toolkit.getDefaultToolkit().getImage("rsc/images/key.png");
		ImageIcon icon = new ImageIcon(i);  //이미지 넣기
        buttonInfo.setIcon(icon); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(buttonInfo)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(buttonInfo)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public void open() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        addKeyListener(new KeyListener() { // List에 액션리스너를 달음.
			public void keyTyped(KeyEvent e) {
				/*System.out.println(e.getKeyChar() + " keyTyped key");

				// shift가 같이 눌렸는지 확인하는 방법
				if ((e.getModifiers() & 1) != 0) { // 1은 shift, 2는 Ctrl키 입니다.
					// 이를 & 연산을하여 같으면 0이아닌 숫자를 반환함으로 해당 키가 눌림을 확인 할 수 있습니다.
					System.out.printf("shift를 눌렀습니다.\n");
				} else {
					System.out.printf("shift를 누르지 않았습니다.\n");
				}*/
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// System.out.println(e.getKeyCode()+" keyReleased key2");
				System.out.println(e.getKeyChar() + " keyReleased key");
			}

			// 모든 키에 반응하지만 대소문자 구분을 못한다.
			public void keyPressed(KeyEvent e) {
				// System.out.println(e.getKeyCode()+" preesed key2");
				switch (e.getKeyCode()) {
				case KeyEvent.VK_Q:
					room.sendMessage("4 " + select +"###" + octave + "***" + 0);
//					SoundController.Play(file + "C.wav");
					break;
				case KeyEvent.VK_2:
//					SoundController.Play(file + "C#.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 1);
					break;
				case KeyEvent.VK_W:
//					SoundController.Play(file + "D.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 2);
					break;
				case KeyEvent.VK_3:
//					SoundController.Play(file + "D#.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 3);
					break;
				case KeyEvent.VK_E:
//					SoundController.Play(file + "E.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 4);
					break;
				case KeyEvent.VK_R:
//					SoundController.Play(file + "F.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 5);
					break;
				case KeyEvent.VK_5:
//					SoundController.Play(file + "F#.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 6);
					break;
				case KeyEvent.VK_T:
//					SoundController.Play(file + "G.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 7);
					break;
				case KeyEvent.VK_6:
//					SoundController.Play(file + "G#.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 8);
					break;
				case KeyEvent.VK_Y:
//					SoundController.Play(file + "A.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 9);
					break;
				case KeyEvent.VK_7:
//					SoundController.Play(file + "A#.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 10);
					break;
				case KeyEvent.VK_U:
//					SoundController.Play(file + "B.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 11);
					break;
				case KeyEvent.VK_I:
//					SoundController.Play(file + "C_high.wav");
					room.sendMessage("4 " + select +"###" + octave + "***" + 12);
					break;
				case KeyEvent.VK_UP:
					if(octave < 1)
						octave++;
					break;
				case KeyEvent.VK_DOWN:
					if(select == 2) {
						if(octave > 0)
							octave--;
					}else { 
						if(octave > -1)
							octave--;
					}
					break;
				}
//				System.out.println(e.getKeyChar());
			}
		});
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayGUI().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel buttonInfo;
    // End of variables declaration                   
}
